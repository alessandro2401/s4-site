'use client'; import { useForm } from 'react-hook-form'; import { zodResolver } from '@hookform/resolvers/zod'; import { z } from 'zod'; import { Input } from '@/components/ui/input'; import { Textarea } from '@/components/ui/textarea'; import { Button } from '@/components/ui/button'; import { Label } from '@/components/ui/label';
const schema=z.object({nome:z.string().min(3,"Informe seu nome completo"),email:z.string().email("E-mail inv√°lido"),mensagem:z.string().min(10,"Mensagem muito curta")}); type FormData=z.infer<typeof schema>;
export default function Page(){const {register,handleSubmit,reset,formState:{errors}}=useForm<FormData>({resolver:zodResolver(schema)}); const onSubmit=(data:FormData)=>{alert(`Mensagem enviada por ${data.nome}`); reset();}; return (<section className="container py-10 space-y-6 max-w-2xl"><h1 className="text-3xl font-bold text-aura-primary">Fale Conosco</h1><form onSubmit={handleSubmit(onSubmit)} className="space-y-4"><div className="space-y-2"><Label htmlFor="nome">Nome</Label><Input id="nome" {...register("nome")} placeholder="Seu nome" />{errors.nome && <p className="text-red-500 text-sm">{errors.nome.message}</p>}</div><div className="space-y-2"><Label htmlFor="email">E-mail</Label><Input id="email" {...register("email")} placeholder="voce@exemplo.com" />{errors.email && <p className="text-red-500 text-sm">{errors.email.message}</p>}</div><div className="space-y-2"><Label htmlFor="mensagem">Mensagem</Label><Textarea id="mensagem" {...register("mensagem")} placeholder="Escreva sua mensagem..." rows={6} />{errors.mensagem && <p className="text-red-500 text-sm">{errors.mensagem.message}</p>}</div><Button type="submit" className="bg-aura-primary hover:bg-aura-secondary">Enviar</Button></form></section>)}